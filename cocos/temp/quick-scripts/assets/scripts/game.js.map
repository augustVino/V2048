{"version":3,"sources":["game.js"],"names":["ROWS","NUMBERS","MIN_LENGTH","MOVE_DURATION","cc","Class","extends","Component","properties","scoreLabel","Label","score","maxScoreLabel","maxScore","blockPrefab","Prefab","gap","bg","Node","gameOverNode","start","drawBgBlocks","init","addEventHandler","blockSize","winSize","width","x","y","positions","i","push","j","block","instantiate","height","addChild","setPosition","p","getComponent","setNumber","updateScore","blocks","length","destroy","data","addBlock","WeChat","onSearchScore","number","res","string","getEmptyLocations","locations","location","Math","floor","random","position","on","event","startPoint","getLocation","touchEnd","endPoint","vec","sub","mag","abs","moveRight","moveLeft","moveUp","moveDown","checkFail","n","gameOver","active","onUpdateScore","afterMove","hasMoved","doMove","callback","action","moveTo","finish","callFunc","runAction","sequence","doMerge","b1","b2","num","scale1","scaleTo","scale2","mid","finished","log","move","toMove","counter","restart"],"mappings":"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","file":"game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const ROWS = 4; // 行数\nconst NUMBERS = [2, 4]; // 随机生成的数字\nconst MIN_LENGTH = 50; // 最起码拖动的长度\nconst MOVE_DURATION = 0.1; // 移动的时长\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        scoreLabel: cc.Label,\n        score: 0,\n\n        maxScoreLabel: cc.Label,\n        maxScore: 0,\n\n        blockPrefab: cc.Prefab,\n        gap: 20,\n        bg: cc.Node,\n        gameOverNode: cc.Node\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n        this.drawBgBlocks();\n        this.init();\n        this.addEventHandler();\n    },\n\n    drawBgBlocks() {\n        this.blockSize = (cc.winSize.width - this.gap * (ROWS + 1)) / ROWS;\n        let x = this.gap + this.blockSize / 2;\n        let y = this.blockSize;\n        this.positions = [];\n        for (let i = 0; i < ROWS; ++i) {\n            this.positions.push([0, 0, 0, 0]);\n            for (let j = 0; j < ROWS; ++j) {\n                let block = cc.instantiate(this.blockPrefab);\n                block.width = this.blockSize;\n                block.height = this.blockSize;\n                this.bg.addChild(block);\n                block.setPosition(cc.p(x, y));\n                this.positions[i][j] = cc.p(x, y);\n                x += this.gap + this.blockSize;\n                block.getComponent('block').setNumber(0);\n            }\n            y += this.gap + this.blockSize;\n            x = this.gap + this.blockSize / 2;\n        }\n    },\n\n    init() {\n        this.updateScore(0);\n\n        if (this.blocks) {\n            for (let i = 0; i < this.blocks.length; ++i) {\n                for (let j = 0; j < this.blocks[i].length; ++j) {\n                    if (this.blocks[i][j] != null) {\n                        this.blocks[i][j].destroy();\n                    }\n                }\n            }\n        }\n\n        this.data = [];\n        this.blocks = [];\n        for (let i = 0; i < ROWS; ++i) {\n            this.blocks.push([null, null, null, null]);\n            this.data.push([0, 0, 0, 0]);\n        }\n\n        this.addBlock();\n        this.addBlock();\n        this.addBlock();\n\n        // 获取用户分数\n        WeChat.onSearchScore(res => {\n            let number = res ? res.maxScore : 0;\n\n            this.maxScore = number;\n            this.maxScoreLabel.string = '个人最高分数：' + number;\n        });\n\n    },\n\n    updateScore(number) {\n        this.score = number;\n        this.scoreLabel.string = '当前分数：' + number;\n    },\n\n    /**\n     * 找出空闲的块\n     * @return 空闲块的位置表示\n     */\n    getEmptyLocations() {\n        let locations = [];\n        for (let i = 0; i < this.blocks.length; ++i) {\n            for (let j = 0; j < this.blocks[i].length; ++j) {\n                if (this.blocks[i][j] == null) {\n                    locations.push({\n                        x: i,\n                        y: j\n                    });\n                }\n            }\n        }\n        return locations;\n    },\n\n    addBlock() {\n        let locations = this.getEmptyLocations();\n        if (locations.length == 0) return false;\n        // let location = locations[Math.floor(cc.random0To1() * locations.length)];\n        let location = locations[Math.floor(Math.random() * locations.length)];\n        let x = location.x;\n        let y = location.y;\n        let position = this.positions[x][y];\n        let block = cc.instantiate(this.blockPrefab);\n        block.width = this.blockSize;\n        block.height = this.blockSize;\n        this.bg.addChild(block);\n        block.setPosition(position);\n        let number = NUMBERS[Math.floor(Math.random() * NUMBERS.length)];\n        block.getComponent('block').setNumber(number);\n        this.blocks[x][y] = block;\n        this.data[x][y] = number;\n        return true;\n    },\n\n    addEventHandler() {\n        this.bg.on('touchstart', (event) => {\n            this.startPoint = event.getLocation();\n        });\n\n        this.bg.on('touchend', (event) => {\n            this.touchEnd(event);\n        });\n\n        this.bg.on('touchcancel', (event) => {\n            this.touchEnd(event);\n        });\n    },\n\n    touchEnd(event) {\n        this.endPoint = event.getLocation();\n\n        // let vec = cc.pSub(this.endPoint, this.startPoint);\n        let vec = this.endPoint.sub(this.startPoint);\n        // if (cc.pLength(vec) > MIN_LENGTH) {\n        if (vec.mag() > MIN_LENGTH) {\n            if (Math.abs(vec.x) > Math.abs(vec.y)) {\n                // 水平方向\n                if (vec.x > 0) {\n                    this.moveRight();\n                } else {\n                    this.moveLeft();\n                }\n            } else {\n                // 竖直方向\n                if (vec.y > 0) {\n                    this.moveUp();\n                } else {\n                    this.moveDown();\n                }\n            }\n        }\n    },\n\n    checkFail() {\n        for (let i = 0; i < ROWS; ++i) {\n            for (let j = 0; j < ROWS; ++j) {\n                let n = this.data[i][j];\n                if (n == 0) return false;\n                if (j > 0 && this.data[i][j - 1] == n) return false;\n                if (j < ROWS - 1 && this.data[i][j + 1] == n) return false;\n                if (i > 0 && this.data[i - 1][j] == n) return false;\n                if (i < ROWS - 1 && this.data[i + 1][j] == n) return false;\n            }\n        }\n        return true;\n    },\n\n    gameOver() {\n        this.gameOverNode.active = true;\n        WeChat.onUpdateScore(this.score);\n    },\n\n    afterMove(hasMoved) {\n        if (hasMoved) {\n            this.updateScore(this.score + 1);\n            this.addBlock();\n        }\n        if (this.checkFail()) {\n            this.gameOver();\n        }\n    },\n\n    /**\n     * 移动格子\n     * @param {cc.Node} block 待移动块\n     * @param {cc.p} position  块的位置\n     * @param {func} callback 移动完回调\n     */\n    doMove(block, position, callback) {\n        let action = cc.moveTo(MOVE_DURATION, position);\n        let finish = cc.callFunc(() => {\n            callback && callback()\n        });\n        block.runAction(cc.sequence(action, finish));\n    },\n\n    /**\n     * 合并操作\n     * @param {cc.Node} b1 块1\n     * @param {cc.Node} b2 块2\n     * @param {int} num 新的数值\n     * @param {Func} callback 完成后回调\n     */\n    doMerge(b1, b2, num, callback) {\n        b1.destroy(); // 合并后销毁\n        let scale1 = cc.scaleTo(0.1, 1.1);\n        let scale2 = cc.scaleTo(0.1, 1);\n        let mid = cc.callFunc(() => {\n            b2.getComponent('block').setNumber(num);\n        });\n        let finished = cc.callFunc(() => {\n            callback && callback()\n        });\n        b2.runAction(cc.sequence(scale1, mid, scale2, finished));\n    },\n\n    moveLeft() {\n        cc.log('move left');\n        let hasMoved = false;\n        let move = (x, y, callback) => {\n            if (y == 0 || this.data[x][y] == 0) {\n                callback && callback();\n                return;\n            } else if (this.data[x][y - 1] == 0) {\n                // 移动\n                let block = this.blocks[x][y];\n                let position = this.positions[x][y - 1];\n                this.blocks[x][y - 1] = block;\n                this.data[x][y - 1] = this.data[x][y];\n                this.data[x][y] = 0;\n                this.blocks[x][y] = null;\n                this.doMove(block, position, () => {\n                    move(x, y - 1, callback);\n                });\n                hasMoved = true;\n            } else if (this.data[x][y - 1] == this.data[x][y]) {\n                // 合并\n                let block = this.blocks[x][y];\n                let position = this.positions[x][y - 1];\n                this.data[x][y - 1] *= 2;\n                this.data[x][y] = 0;\n                this.blocks[x][y] = null;\n                this.doMove(block, position, () => {\n                    this.doMerge(block, this.blocks[x][y - 1], this.data[x][y - 1], () => {\n                        callback && callback();\n                    });\n                });\n                hasMoved = true;\n            } else {\n                callback && callback();\n                return;\n            }\n        };\n\n        let toMove = [];\n        for (let i = 0; i < ROWS; ++i) {\n            for (let j = 0; j < ROWS; ++j) {\n                if (this.data[i][j] != 0) {\n                    toMove.push({ x: i, y: j });\n                }\n            }\n        }\n\n        let counter = 0;\n        for (let i = 0; i < toMove.length; ++i) {\n            move(toMove[i].x, toMove[i].y, () => {\n                counter++;\n                if (counter == toMove.length) {\n                    this.afterMove(hasMoved);\n                }\n            });\n        }\n    },\n\n    moveRight() {\n        cc.log('move right');\n        let hasMoved = false;\n        let move = (x, y, callback) => {\n            if (y == ROWS - 1 || this.data[x][y] == 0) {\n                callback && callback();\n                return;\n            } else if (this.data[x][y + 1] == 0) {\n                // 移动\n                let block = this.blocks[x][y];\n                let position = this.positions[x][y + 1];\n                this.blocks[x][y + 1] = block;\n                this.data[x][y + 1] = this.data[x][y];\n                this.data[x][y] = 0;\n                this.blocks[x][y] = null;\n                this.doMove(block, position, () => {\n                    move(x, y + 1, callback);\n                });\n                hasMoved = true;\n            } else if (this.data[x][y + 1] == this.data[x][y]) {\n                // 合并\n                let block = this.blocks[x][y];\n                let position = this.positions[x][y + 1];\n                this.data[x][y + 1] *= 2;\n                this.data[x][y] = 0;\n                this.blocks[x][y] = null;\n                this.doMove(block, position, () => {\n                    this.doMerge(block, this.blocks[x][y + 1], this.data[x][y + 1], () => {\n                        callback && callback();\n                    });\n                });\n                hasMoved = true;\n            } else {\n                callback && callback();\n                return;\n            }\n        };\n\n        let toMove = [];\n        for (let i = 0; i < ROWS; ++i) {\n            for (let j = ROWS - 1; j >= 0; --j) {\n                if (this.data[i][j] != 0) {\n                    toMove.push({ x: i, y: j });\n                }\n            }\n        }\n\n        let counter = 0;\n        for (let i = 0; i < toMove.length; ++i) {\n            move(toMove[i].x, toMove[i].y, () => {\n                counter++;\n                if (counter == toMove.length) {\n                    this.afterMove(hasMoved);\n                }\n            });\n        }\n    },\n\n    moveUp() {\n        cc.log('move up');\n\n        let hasMoved = false;\n        let move = (x, y, callback) => {\n            if (x == ROWS - 1 || this.data[x][y] == 0) {\n                callback && callback();\n                return;\n            } else if (this.data[x + 1][y] == 0) {\n                // 移动\n                let block = this.blocks[x][y];\n                let position = this.positions[x + 1][y];\n                this.blocks[x + 1][y] = block;\n                this.data[x + 1][y] = this.data[x][y];\n                this.data[x][y] = 0;\n                this.blocks[x][y] = null;\n                this.doMove(block, position, () => {\n                    move(x + 1, y, callback);\n                });\n                hasMoved = true;\n            } else if (this.data[x + 1][y] == this.data[x][y]) {\n                // 合并\n                let block = this.blocks[x][y];\n                let position = this.positions[x + 1][y];\n                this.data[x + 1][y] *= 2;\n                this.data[x][y] = 0;\n                this.blocks[x][y] = null;\n                this.doMove(block, position, () => {\n                    this.doMerge(block, this.blocks[x + 1][y], this.data[x + 1][y], () => {\n                        callback && callback();\n                    });\n                });\n                hasMoved = true;\n            } else {\n                callback && callback();\n                return;\n            }\n        };\n\n        let toMove = [];\n        for (let i = ROWS - 1; i >= 0; --i) {\n            for (let j = 0; j < ROWS; ++j) {\n                if (this.data[i][j] != 0) {\n                    toMove.push({ x: i, y: j });\n                }\n            }\n        }\n\n        let counter = 0;\n        for (let i = 0; i < toMove.length; ++i) {\n            move(toMove[i].x, toMove[i].y, () => {\n                counter++;\n                if (counter == toMove.length) {\n                    this.afterMove(hasMoved);\n                }\n            });\n        }\n    },\n\n    moveDown() {\n        cc.log('move down');\n\n        let hasMoved = false;\n        let move = (x, y, callback) => {\n            if (x == 0 || this.data[x][y] == 0) {\n                callback && callback();\n                return;\n            } else if (this.data[x - 1][y] == 0) {\n                // 移动\n                let block = this.blocks[x][y];\n                let position = this.positions[x - 1][y];\n                this.blocks[x - 1][y] = block;\n                this.data[x - 1][y] = this.data[x][y];\n                this.data[x][y] = 0;\n                this.blocks[x][y] = null;\n                this.doMove(block, position, () => {\n                    move(x - 1, y, callback);\n                });\n                hasMoved = true;\n            } else if (this.data[x - 1][y] == this.data[x][y]) {\n                // 合并\n                let block = this.blocks[x][y];\n                let position = this.positions[x - 1][y];\n                this.data[x - 1][y] *= 2;\n                this.data[x][y] = 0;\n                this.blocks[x][y] = null;\n                this.doMove(block, position, () => {\n                    this.doMerge(block, this.blocks[x - 1][y], this.data[x - 1][y], () => {\n                        callback && callback();\n                    });\n                });\n                hasMoved = true;\n            } else {\n                callback && callback();\n                return;\n            }\n        };\n\n        let toMove = [];\n        for (let i = 0; i < ROWS; ++i) {\n            for (let j = 0; j < ROWS; ++j) {\n                if (this.data[i][j] != 0) {\n                    toMove.push({ x: i, y: j });\n                }\n            }\n        }\n\n        let counter = 0;\n        for (let i = 0; i < toMove.length; ++i) {\n            move(toMove[i].x, toMove[i].y, () => {\n                counter++;\n                if (counter == toMove.length) {\n                    this.afterMove(hasMoved);\n                }\n            });\n        }\n    },\n    // 点击重新开始\n    restart() {\n        this.init();\n        this.gameOverNode.active = false;\n    },\n\n});"]}